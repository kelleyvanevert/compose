ws = _{ " " | "\t" | "\n" }

WHITESPACE = _{ ws }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

id = @{ ASCII_ALPHA_LOWER ~ ("_" | ASCII_ALPHANUMERIC)* }

save_id = @{ (ASCII_HEX_DIGIT | "_")+ }

save_input = ${ "@" ~ save_id }

kw_sample = @{ "S" ~ ("a" ~ ("m" ~ ("p" ~ ("l" ~ ("e")?)?)?)?)? }
kw_envelope = @{ "E" ~ ("n" ~ ("v" ~ ("e" ~ ("l" ~ ("o" ~ ("p" ~ ("e")?)?)?)?)?)?)? }
kw_pattern = @{ "P" ~ ("a" ~ ("t" ~ ("t" ~ ("e" ~ ("r" ~ ("n")?)?)?)?)?)? }

input = ${ (kw_sample | kw_envelope | kw_pattern) ~ save_input? }

number = @{
    | (ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT*)?)
    | ("." ~ ASCII_DIGIT+)
}

factor = ${ number ~ "f" }

params = { id ~ ("," ~ id)* ~ ","? }

function = { "fn" ~ "(" ~ params? ~ ")" ~ expr }

typename = { "sample" | "envelope" | "pattern" | "number" | "factor" }

primary = _{
    | factor
    | number
    | input
    | function
    | id
    | block
    | ("(" ~ expr ~ ")")
}

expr         =   { prefix* ~ primary ~ postfix* ~ (infix ~ prefix* ~ primary ~ postfix* )* }
    infix    =  _{ seq | add | sub | mul | div | pow }
      seq    =   { "++" }
      add    =   { "+" }
      sub    =   { "-" }
      mul    =   { "*" }
      div    =   { "/" }
      pow    =   { "^" }
    prefix   =  _{ pos | neg }
      pos    =   { "+" }
      neg    =   { "-" }
    postfix  =  _{ fac | coerce }
      fac    =   { "!" }
      coerce =   { "as" ~ typename }

stmt = _{ noop | def | ret }
    noop = { ";" }
    def = { "let" ~ id ~ "=" ~ expr ~ ";" }
    ret = { "return" ~ expr ~ ";" }

stmts = { stmt* }

block = { "{" ~ stmts ~ expr? ~ "}" }

entry_expression = _{ SOI ~ expr ~ EOI }
entry_statement = _{ SOI ~ stmt ~ EOI }
